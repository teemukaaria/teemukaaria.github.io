{"version":3,"sources":["img/chevron-left.svg","img/chevron-right.svg","commons/theme.js","commons/helper.js","components/input/MealSelector.js","components/input/DateSelector.js","components/input/Point.js","components/input/PointsGrid.js","commons/database.js","components/input/TotalField.js","screens/InputScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","variables","primaryColor","mealColors","breakfast","lunch","snack","dinner","lightMealColors","getColor","variant","MEALS","InputScreen","_this$props","this","props","selectedMeal","onMealChange","react_default","a","createElement","MealTagContainer","map","x","MealTag","key","onClick","className","Component","styled","div","_templateObject","_templateObject2","DateSelector","handleIconClick","diff","elem","document","getElementById","style","animation","setTimeout","_this","onDateChange","_this2","selectedDate","Container","Icon","src","ChevLeft","alt","DateText","id","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","ChevRight","DateSelector_templateObject","img","DateSelector_templateObject2","_templateObject3","Point","handleClick","firstMeal","secondMeal","_this$props2","Point_Container","MealStripeTop","MealStripeBottom","Point_templateObject","MealStripe","Point_templateObject2","Point_templateObject3","_templateObject4","PointsGrid","handlePointClick","pointIndex","partIndex","onPointClick","points","minPoints","meals","concat","Array","Math","max","floor","length","fill","pointElems","i","push","input_Point","PointsGrid_Container","PointsGrid_templateObject","DB","TotalField","nextProps","Text","TotalField_templateObject","DB_NAME","DB_VERSION","POINTS_STORE","openDatabase","_openDatabase","apply","arguments","_callee","regenerator_default","wrap","_context","prev","next","window","indexedDB","Error","abrupt","Promise","resolve","reject","request","open","onsuccess","console","log","result","onerror","e","target","errorCode","onupgradeneeded","db","currentTarget","objectStoreNames","contains","createObjectStore","keyPath","stop","getDatabase","_callee2","_context2","sent","savePoints","_x","_x2","_savePoints","_callee3","date","_context3","transaction","oncomplete","store","objectStore","obj","format","put","getPoints","_x3","_getPoints","_callee4","_context4","get","state","moment","handleMealChange","meal","setState","handleDateChange","newDate","add","t0","alert","error","index","_this$state","newPoints","slice","_this$state2","InputScreen_Container","input_DateSelector","MealSelector","input_PointsGrid","input_TotalField","InputScreen_templateObject","App","Header","Content","screens_InputScreen","header","App_templateObject","App_templateObject2","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f6093d34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chevron-left.439818dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-right.12852530.svg\";","export const variables = {\r\n  primaryColor: '#333',\r\n  mealColors: {\r\n    breakfast: '#F9CA24',\r\n    lunch: '#4834D4',\r\n    snack: '#6AB04C',\r\n    dinner: '#EB4D4B',\r\n  },\r\n  lightMealColors: {\r\n    breakfast: '#fce287',\r\n    lunch: '#7b6ce0',\r\n    snack: '#9bcb86',\r\n    dinner: '#f28988',\r\n  },\r\n};\r\n","import { variables } from './theme.js';\r\n\r\nexport const getColor = variant =>\r\n  variant ? variables.mealColors[variant] : 'transparent';\r\n\r\nexport const getLightColor = variant =>\r\n  variant ? variables.lightMealColors[variant] : 'transparent';\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { getColor } from '../../commons/helper';\r\n\r\nconst MEALS = ['breakfast', 'lunch', 'snack', 'dinner'];\r\n\r\nclass InputScreen extends Component {\r\n  static propTypes = {\r\n    selectedMeal: PropTypes.string,\r\n    onMealChange: PropTypes.func,\r\n  };\r\n\r\n  render() {\r\n    const { selectedMeal, onMealChange } = this.props;\r\n\r\n    return (\r\n      <MealTagContainer>\r\n        {MEALS.map(x => (\r\n          <MealTag\r\n            key={x}\r\n            onClick={() => onMealChange(x)}\r\n            variant={x}\r\n            className={selectedMeal === x && 'selected'}\r\n          >\r\n            {x}\r\n          </MealTag>\r\n        ))}\r\n      </MealTagContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst MealTagContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 1rem;\r\n  padding: 0 2rem;\r\n`;\r\n\r\nconst MealTag = styled.p`\r\n  color: white;\r\n  background-image: linear-gradient(\r\n    -50deg,\r\n    white 40%,\r\n    ${props => getColor(props.variant)} 60%\r\n  );\r\n  background-position: 0 0;\r\n  background-size: 250% 250%;\r\n  transition: background-position 0.4s;\r\n  font-size: 1.8rem;\r\n  font-weight: 900;\r\n  border: 3px solid ${props => getColor(props.variant)};\r\n  padding: 0.8rem 1.5rem;\r\n  border-radius: 2rem;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n\r\n  &.selected {\r\n    background-position: 100% 100%;\r\n    color: ${props => getColor(props.variant)};\r\n  }\r\n`;\r\n\r\nexport default InputScreen;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ChevLeft from '../../img/chevron-left.svg';\r\nimport ChevRight from '../../img/chevron-right.svg';\r\n\r\nclass DateSelector extends Component {\r\n  static propTypes = {\r\n    selectedDate: PropTypes.object,\r\n    onDateChange: PropTypes.func,\r\n  };\r\n\r\n  handleIconClick = diff => {\r\n    const elem = document.getElementById('selectedDate');\r\n    elem.style.animation = '';\r\n    setTimeout(() => {\r\n      elem.style.animation = 'slideBackground .4s';\r\n    }, 0);\r\n    this.props.onDateChange(diff);\r\n  };\r\n\r\n  render() {\r\n    const { selectedDate } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <Icon\r\n          src={ChevLeft}\r\n          alt=\"Move date back\"\r\n          onClick={() => this.handleIconClick(-1)}\r\n        />\r\n        <DateText id=\"selectedDate\">\r\n          {selectedDate.calendar(null, {\r\n            sameDay: '[Today]',\r\n            nextDay: '[Tomorrow]',\r\n            nextWeek: 'dddd',\r\n            lastDay: '[Yesterday]',\r\n            lastWeek: '[Last] dddd',\r\n            sameElse: 'DD/MM/YYYY',\r\n          })}\r\n        </DateText>\r\n        <Icon\r\n          src={ChevRight}\r\n          alt=\"Move date forward\"\r\n          onClick={() => this.handleIconClick(1)}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  flex: 1;\r\n`;\r\n\r\nconst DateText = styled.p`\r\n  flex: 2;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  margin: 0 3rem;\r\n  font-size: 1.8rem;\r\n  font-weight: 900;\r\n  border: 3px solid #333;\r\n  padding: 0.8rem 1.5rem;\r\n  border-radius: 2rem;\r\n  text-transform: uppercase;\r\n  color: white;\r\n  background-image: linear-gradient(-50deg, #333 40%, white, #333 60%);\r\n  background-size: 300% 300%;\r\n`;\r\n\r\nexport default DateSelector;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { getColor, getLightColor } from '../../commons/helper';\r\n\r\nclass Point extends Component {\r\n  static propTypes = {\r\n    firstMeal: PropTypes.string,\r\n    secondMeal: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { firstMeal, secondMeal, onClick } = this.props;\r\n    if (firstMeal && secondMeal) onClick(0);\r\n    else if (firstMeal) onClick(2);\r\n    else onClick(1);\r\n  };\r\n\r\n  render() {\r\n    const { firstMeal, secondMeal } = this.props;\r\n\r\n    return (\r\n      <Container onClick={this.handleClick}>\r\n        <MealStripeTop className={!firstMeal && 'hidden'} variant={firstMeal} />\r\n        <MealStripeBottom\r\n          className={!secondMeal && 'hidden'}\r\n          variant={secondMeal}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 100%;\r\n  background-image: radial-gradient(#333 20%, #555);\r\n  overflow: hidden;\r\n  backface-visibility: hidden;\r\n  // box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.4);\r\n`;\r\n\r\nconst MealStripe = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  transition: transform 0.2s;\r\n  background-image: radial-gradient(\r\n    ${props => getColor(props.variant)} 20%,\r\n    ${props => getLightColor(props.variant)}\r\n  );\r\n`;\r\n\r\nconst MealStripeTop = styled(MealStripe)`\r\n  clip-path: polygon(0 0, 102% 0, 0 102%);\r\n\r\n  &.hidden {\r\n    transform: translate(-50%, -50%);\r\n  }\r\n`;\r\n\r\nconst MealStripeBottom = styled(MealStripe)`\r\n  clip-path: polygon(100% 100%, 100% 0%, 0% 100%);\r\n\r\n  &.hidden {\r\n    transform: translate(50%, 50%);\r\n  }\r\n`;\r\n\r\nexport default Point;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Point from './Point';\r\n\r\nclass PointsGrid extends Component {\r\n  static propTypes = {\r\n    points: PropTypes.arrayOf(PropTypes.string),\r\n    minPoints: PropTypes.number,\r\n    onPointClick: PropTypes.func,\r\n  };\r\n\r\n  handlePointClick = pointIndex => partIndex => {\r\n    this.props.onPointClick(pointIndex + partIndex);\r\n  };\r\n\r\n  render() {\r\n    const { points, minPoints } = this.props;\r\n\r\n    const meals = points.concat(\r\n      new Array(\r\n        Math.max(minPoints, (Math.floor(points.length / 10) + 2) * 5) * 2 -\r\n          points.length\r\n      ).fill(null)\r\n    );\r\n\r\n    const pointElems = [];\r\n    for (let i = 0; i < meals.length; i += 2) {\r\n      pointElems.push(\r\n        <Point\r\n          key={i}\r\n          firstMeal={meals[i]}\r\n          secondMeal={meals[i + 1]}\r\n          onClick={this.handlePointClick(i)}\r\n        />\r\n      );\r\n    }\r\n    return <Container>{pointElems}</Container>;\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 6rem);\r\n  justify-content: center;\r\n  grid-auto-rows: 6rem;\r\n  grid-gap: 1rem;\r\n  max-height: calc(100vh - 38rem);\r\n  overflow: auto;\r\n  padding: 4px;\r\n`;\r\n\r\nexport default PointsGrid;\r\n","const DB_NAME = 'pointseilijat';\r\nconst DB_VERSION = 1;\r\nconst POINTS_STORE = 'points';\r\n\r\nlet DB;\r\n\r\nexport async function openDatabase() {\r\n  if (!window.indexedDB) {\r\n    throw new Error('No IndexedDB');\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open(DB_NAME, DB_VERSION);\r\n    request.onsuccess = () => {\r\n      console.log('db open');\r\n      resolve(request.result);\r\n    };\r\n    request.onerror = e => {\r\n      reject(e.target.errorCode);\r\n    };\r\n    request.onupgradeneeded = e => {\r\n      console.log('onupgradeneeded');\r\n      const db = e.currentTarget.result;\r\n      if (!db.objectStoreNames.contains(POINTS_STORE)) {\r\n        db.createObjectStore(POINTS_STORE, { keyPath: 'date' });\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nasync function getDatabase() {\r\n  if (!window.indexedDB) {\r\n    throw new Error('No IndexedDB');\r\n  }\r\n\r\n  if (DB) return DB;\r\n  const db = await openDatabase();\r\n  DB = db;\r\n  return DB;\r\n}\r\n\r\nexport async function savePoints(date, points) {\r\n  const db = await getDatabase();\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = db.transaction(POINTS_STORE, 'readwrite');\r\n    transaction.oncomplete = () => {\r\n      resolve();\r\n    };\r\n    transaction.onerror = e => {\r\n      reject(e.target.errorCode);\r\n    };\r\n    const store = transaction.objectStore(POINTS_STORE);\r\n    const obj = {\r\n      date: date.format('YYYY-MM-DD'),\r\n      points,\r\n    };\r\n    store.put(obj);\r\n  });\r\n}\r\n\r\nexport async function getPoints(date) {\r\n  const db = await getDatabase();\r\n  const transaction = db.transaction(POINTS_STORE);\r\n  const store = transaction.objectStore(POINTS_STORE);\r\n  return new Promise((resolve, reject) => {\r\n    const request = store.get(date.format('YYYY-MM-DD'));\r\n    request.onsuccess = () => {\r\n      const { result } = request;\r\n      resolve(result ? result.points : []);\r\n    };\r\n    request.onerror = e => {\r\n      reject(e.target.errorCode);\r\n    };\r\n  });\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nclass TotalField extends Component {\r\n  static propTypes = {\r\n    points: PropTypes.arrayOf(PropTypes.string),\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return this.props.points.length !== nextProps.points.length;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const elem = document.getElementById('totalText');\r\n    elem.style.animation = '';\r\n    setTimeout(() => {\r\n      elem.style.animation = 'slideBackground .4s';\r\n    }, 0);\r\n  }\r\n\r\n  render() {\r\n    const { points } = this.props;\r\n\r\n    return <Text id=\"totalText\">Total {points.length / 2}</Text>;\r\n  }\r\n}\r\n\r\nconst Text = styled.p`\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  margin: auto;\r\n  width: 20rem;\r\n  font-size: 1.8rem;\r\n  font-weight: 900;\r\n  border: 3px solid #333;\r\n  padding: 0.8rem 1.5rem;\r\n  border-radius: 2rem;\r\n  text-transform: uppercase;\r\n  color: white;\r\n  background-image: linear-gradient(-50deg, #333 40%, white, #333 60%);\r\n  background-size: 300% 300%;\r\n`;\r\n\r\nexport default TotalField;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport MealSelector from '../components/input/MealSelector';\r\nimport DateSelector from '../components/input/DateSelector';\r\nimport PointsGrid from '../components/input/PointsGrid';\r\nimport TotalField from '../components/input/TotalField';\r\nimport { savePoints, getPoints } from '../commons/database';\r\n\r\nclass InputScreen extends Component {\r\n  state = {\r\n    selectedMeal: 'breakfast',\r\n    selectedDate: moment(),\r\n    points: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { selectedDate } = this.state;\r\n    try {\r\n      const points = await getPoints(selectedDate);\r\n      this.setState({ points: points || [] });\r\n    } catch (e) {\r\n      alert('Unable to retrieve points');\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  handleMealChange = meal => {\r\n    this.setState({ selectedMeal: meal });\r\n  };\r\n\r\n  handleDateChange = async diff => {\r\n    const newDate = moment(this.state.selectedDate).add(diff, 'days');\r\n    try {\r\n      const points = await getPoints(newDate);\r\n      this.setState({ points: points || [], selectedDate: newDate });\r\n    } catch (e) {\r\n      alert('Unable to retrieve points');\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  handlePointClick = async index => {\r\n    const { points, selectedMeal, selectedDate } = this.state;\r\n    let newPoints = points.slice();\r\n\r\n    if (index < points.length) newPoints = points.slice(0, index);\r\n    else if (index > points.length)\r\n      newPoints = points.concat(\r\n        new Array(index - points.length).fill(selectedMeal)\r\n      );\r\n    try {\r\n      console.log('saving points');\r\n      await savePoints(selectedDate, newPoints);\r\n      this.setState({ points: newPoints });\r\n    } catch (e) {\r\n      alert('Unable to save points');\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedMeal, selectedDate, points } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <DateSelector\r\n          selectedDate={selectedDate}\r\n          onDateChange={this.handleDateChange}\r\n        />\r\n        <MealSelector\r\n          selectedMeal={selectedMeal}\r\n          onMealChange={this.handleMealChange}\r\n        />\r\n        <PointsGrid\r\n          points={points}\r\n          minPoints={25}\r\n          onPointClick={this.handlePointClick}\r\n        />\r\n        <TotalField points={points} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 2rem 1rem;\r\n\r\n  & > *:not(:last-child) {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\n\r\nexport default InputScreen;\r\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport ImportScreen from './screens/InputScreen';\nimport './App.css';\nimport { openDatabase } from './commons/database';\n\nclass App extends Component {\n  componentDidMount() {\n    openDatabase();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header>\n          <h1>Pointseilijat</h1>\n        </Header>\n        <Content>\n          <ImportScreen />\n        </Content>\n      </div>\n    );\n  }\n}\n\nconst Header = styled.header`\n  background: #333;\n  color: white;\n  text-align: center;\n  font-size: 2rem;\n  font-family: 'Passero One', sans-serif;\n  padding: 1rem;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.4);\n`;\n\nconst Content = styled.div`\n  max-width: 46rem;\n  margin: auto;\n  margin-top: 1rem;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}